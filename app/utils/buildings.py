from shapely.geometry import Point, Polygon

BUILDINGS = {
    "A-1": [
        (51.107301, 17.061165),
        (51.1082, 17.061443),
        (51.107735, 17.062922),
        (51.107281, 17.062744),
    ],
    "C-1": [
        (51.109340, 17.060448),
        (51.109210, 17.060836),
        (51.108916, 17.060586),
        (51.109032, 17.060191),
    ],
    "C-2": [
        (51.108954, 17.060660),
        (51.109144, 17.060819),
        (51.108971, 17.061399),
        (51.108753, 17.061242),
    ],
    "C-3": [
        (51.108705, 17.060492),
        (51.109003, 17.059565),
        (51.109165, 17.059693),
        (51.108871, 17.060632),
    ],
    "C-4": [
        (51.109003, 17.059565),
        (51.109126, 17.059201),
        (51.109276, 17.059325),
        (51.109165, 17.059693),
    ],
    "C-5": [
        (51.109111, 17.059170),
        (51.109022, 17.058849),
        (51.109214, 17.058713),
        (51.109305, 17.059028),
    ],
    "C-13": [
        (51.107297, 17.060664),
        (51.107291, 17.058929),
        (51.107993, 17.058447),
        (51.108087, 17.058925),
    ],
    "C-16": [
        (51.109130, 17.060086),
        (51.109403, 17.058876),
        (51.109630, 17.059254),
        (51.109353, 17.060296),
    ],
    "D-1": [
        (51.110474, 17.059116),
        (51.110174, 17.058005),
        (51.110389, 17.057853),
        (51.110702, 17.058936),
    ],
    "D-2": [
        (51.109980, 17.057583),
        (51.109709, 17.056462),
        (51.109908, 17.056308),
        (51.110210, 17.057363),
    ],
    "D-21": [
        (51.109995, 17.058598),
        (51.109724, 17.058766),
        (51.109313, 17.057223),
        (51.109513, 17.056858),
    ],
}

def find_building(lat: float, lon: float) -> str | None:
    """
    sprawdza czy punkt znajduje się wewnątrz budynku i zwraca nazwę budynku lub None
    """
    point = Point(lon, lat) 
    for name, coords in BUILDINGS.items():
        polygon = Polygon((lon, lat) for (lat, lon) in coords)  # zamiana (lat, lon) -> (lon, lat)
        if polygon.contains(point):
            return name
    return None
